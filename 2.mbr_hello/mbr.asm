SECTION MBR vstart=0x7c00
; -------------------------------------------------------
; 设置段寄存器
    mov ax, cs
    mov ds, ax
    mov es, ax
    mov ss, ax
    mov fs, ax
    mov sp, 0x7c00

; -------------------------------------------------------
; 清屏，利用 0x06 号功能，上卷全部行，即可清屏
    mov ax, 0x600  ; 功能号 AH=0x06, AL = 上卷行数，0表示全部
    mov bx, 0x700  ; 上卷行属性
    mov cx, 0      ; 左上角(0,0)
    mov dx, 0x184f ; 右下角(80,25)

    int 0x10       ; 调用BIOS中断

; -------------------------------------------------------
; 获取光标位置
    mov ah, 0x03  ; 功能号 AH=0x03
    mov bh, 0     ; 页号
    int 0x10      ; 调用BIOS中断
; 输出: CH=光标开始行号, CL=光标开始列号, DH=光标所在行号, DL=光标所在列号

; -------------------------------------------------------
; 设置光标位置. 如果不设置，光标会在清屏前的位置
    mov ah, 0x02  ; 功能号 AH=0x02
    mov bh, 0     ; 页号
    mov dh, 0     ; 行号
    mov dl, 0     ; 列号
    int 0x10      ; 调用BIOS中断

; -------------------------------------------------------
; 打印字符串: 使用的是 BIOS 中断 0x10 的 0x13 号功能
    mov ax, message
    mov bp, ax    ; es:bp 为字符串地址，es 为段地址，与 cs 相同

    ; 获取字符串长度
    mov cx, 14    ; 字符串长度, 【根据实际情况修改】！！
    mov ax, 0x1301 ; 功能号 AH=0x13(显示字符串及属性)，AL=0x01(显示字符串，且光标跟随移动)

    mov bx, 0x2    ; 属性, 黑底绿字
    int 0x10      ; 调用BIOS中断
; -------------------------------------------------------

    jmp $      ; 无限循环

    message db "Hello, Hurray!"

    times 510-($-$$) db 0

    db 0x55, 0xaa

